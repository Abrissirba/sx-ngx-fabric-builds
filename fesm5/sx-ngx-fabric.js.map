{"version":3,"file":"sx-ngx-fabric.js.map","sources":["ng://sx-ngx-fabric/lib/sx-ngx-fabric.service.ts","ng://sx-ngx-fabric/lib/sx-ngx-fabric.component.ts","ng://sx-ngx-fabric/lib/breadcrumb/breadcrumb.component.ts","ng://sx-ngx-fabric/lib/breadcrumb/breadcrumb.module.ts","ng://sx-ngx-fabric/lib/utils/guid.ts","ng://sx-ngx-fabric/lib/checkbox/checkbox.component.ts","ng://sx-ngx-fabric/lib/checkbox/checkbox.module.ts","ng://sx-ngx-fabric/lib/button/button.component.ts","ng://sx-ngx-fabric/lib/button/button.module.ts","ng://sx-ngx-fabric/lib/text-field/text-field.component.ts","ng://sx-ngx-fabric/lib/text-field/text-field.module.ts","ng://sx-ngx-fabric/lib/dialog/dialog-container.component.ts","ng://sx-ngx-fabric/lib/dialog/dialog-ref.ts","ng://sx-ngx-fabric/lib/dialog/dialog-tokens.ts","ng://sx-ngx-fabric/lib/dialog/dialog.service.ts","ng://sx-ngx-fabric/lib/dialog/dialog-content.directive.ts","ng://sx-ngx-fabric/lib/dialog/dialog.module.ts","ng://sx-ngx-fabric/lib/toggle/toggle.component.ts","ng://sx-ngx-fabric/lib/toggle/toggle.module.ts","ng://sx-ngx-fabric/lib/callout/callout.component.ts","ng://sx-ngx-fabric/lib/callout/callout-trigger.directive.ts","ng://sx-ngx-fabric/lib/callout/callout.module.ts","ng://sx-ngx-fabric/lib/nav/nav.component.ts","ng://sx-ngx-fabric/lib/nav/nav.module.ts","ng://sx-ngx-fabric/lib/sx-ngx-fabric.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SxNgxFabricService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sx-sx-ngx-fabric',\n  template: `\n    <p>\n      sx-ngx-fabric works!\n    </p>\n  `,\n  styles: []\n})\nexport class SxNgxFabricComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { IBreadcrumbItem } from \"./i-breadcrumb-item\";\r\n\r\n@Component({\r\n  selector: \"sx-ngx-fabric-breadcrumb\",\r\n  templateUrl: \"./breadcrumb.component.html\",\r\n  styleUrls: [\"./breadcrumb.component.scss\"]\r\n})\r\nexport class BreadcrumbComponent {\r\n  @Input() items: Array<IBreadcrumbItem>;\r\n\r\n  @Output() itemClick = new EventEmitter<IBreadcrumbItem>();\r\n\r\n  constructor() {}\r\n\r\n  onClick(item: IBreadcrumbItem) {\r\n    this.itemClick.next(item);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BreadcrumbComponent } from './breadcrumb.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    BreadcrumbComponent\r\n  ],\r\n  exports: [\r\n    BreadcrumbComponent\r\n  ]\r\n})\r\nexport class BreadcrumbModule { }\r\n","export class Guid {\r\n    static uniqueid() {\r\n        // always start with a letter (for DOM friendlyness)\r\n        let idstr = String.fromCharCode(Math.floor((Math.random() * 25) + 65));\r\n        do {\r\n            // between numbers and characters (48 is 0 and 90 is Z (42-48 = 90)\r\n            const ascicode = Math.floor((Math.random() * 42) + 48);\r\n            if (ascicode < 58 || ascicode > 64) {\r\n                // exclude all chars between : (58) and @ (64)\r\n                idstr += String.fromCharCode(ascicode);\r\n            }\r\n        } while (idstr.length < 32);\r\n\r\n        return (idstr);\r\n    }\r\n}","import { Component, OnInit, Input, forwardRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Guid } from '../utils/guid';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => CheckboxComponent),\r\n    multi: true\r\n  }],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CheckboxComponent {\r\n\r\n  private _checked = false;\r\n  @Input() get checked() {\r\n    return this._checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    if (checked !== this.checked) {\r\n      this._checked = checked;\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  @Input() disabled = false;\r\n\r\n  inputId = Guid.uniqueid();\r\n\r\n  constructor(\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  onInputClick(evt: MouseEvent) {\r\n    evt.stopPropagation();\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    this.checked = !this.checked;\r\n    this._onChange(this.checked);\r\n  }\r\n\r\n  // ControlValueAccessor implementation\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private _onChange = (_: any) => { };\r\n  private _onTouched = () => { };\r\n\r\n  public writeValue(val: any) {\r\n    this.checked = val;\r\n  }\r\n\r\n  public registerOnChange(fn: (_: any) => void): void { this._onChange = fn; }\r\n  public registerOnTouched(fn: () => void): void { this._onTouched = fn; }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CheckboxComponent } from './checkbox.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    CheckboxComponent\r\n  ],\r\n  exports: [\r\n    CheckboxComponent\r\n  ]\r\n})\r\nexport class CheckboxModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'button[sx-ngx-fabric-button], a[sx-ngx-fabric-button]',\r\n  styleUrls: ['./button.component.scss'],\r\n  templateUrl: './button.component.html',\r\n  // host: {'class': 'mat-button'}\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n\r\n  @Input() primary = false;\r\n\r\n  @HostBinding('class.ms-Button') classes = true;\r\n\r\n  @HostBinding('class.ms-Button--primary') get classPrimary() { return this.primary; }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonComponent } from './button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    ButtonComponent\r\n  ],\r\n  exports: [\r\n    ButtonComponent\r\n  ]\r\n})\r\nexport class ButtonModule { }\r\n","import { Component, OnInit, HostBinding, Input, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-text-field',\r\n  templateUrl: './text-field.component.html',\r\n  styleUrls: ['./text-field.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TextFieldComponent),\r\n    multi: true\r\n  }],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TextFieldComponent {\r\n\r\n  @Input() label;\r\n\r\n  @Input() multiline = false;\r\n\r\n  @Input() rows = 3;\r\n\r\n  @Input() type = 'text';\r\n\r\n  @Input() placeholder;\r\n\r\n  @Input() disabled = false;\r\n\r\n  @Input() required = false;\r\n\r\n  value = null;\r\n\r\n  @HostBinding('class') classes = 'ms-TextField';\r\n\r\n  @HostBinding('class.ms-TextField--multiline') get classMultiline() { return this.multiline; }\r\n\r\n  @HostBinding('class.is-disabled') get classIsDisabled() { return this.disabled; }\r\n\r\n\r\n\r\n  constructor(\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  onChange(evt) {\r\n    evt.stopPropagation();\r\n    this.value = evt.target.value;\r\n    this._onChange(this.value);\r\n  }\r\n\r\n  onTouched(evt) {\r\n    this._onTouched();\r\n  }\r\n\r\n  // ControlValueAccessor implementation\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private _onChange = (_: any) => { };\r\n  private _onTouched = () => { };\r\n\r\n  public writeValue(val: any) {\r\n    this.value = val;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  public registerOnChange(fn: (_: any) => void): void { this._onChange = fn; }\r\n  public registerOnTouched(fn: () => void): void { this._onTouched = fn; }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TextFieldComponent } from './text-field.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    TextFieldComponent\r\n  ],\r\n  exports: [\r\n    TextFieldComponent\r\n  ]\r\n})\r\nexport class TextFieldModule { }\r\n","import { Component, OnInit, ViewEncapsulation, ViewChild, ComponentRef, EmbeddedViewRef, Optional, Inject, ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { CdkPortalOutlet, BasePortalOutlet, TemplatePortal, CdkPortal } from '@angular/cdk/portal';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { SxNgxFabricDialogConfig } from './dialog-config';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-dialog-container',\r\n  templateUrl: './dialog-container.component.html'\r\n})\r\nexport class SxNgxDialogContainerComponent extends BasePortalOutlet {\r\n\r\n  /** The portal outlet inside of this container into which the dialog content will be loaded. */\r\n  @ViewChild('portalOutlet') _portalOutlet: CdkPortalOutlet;\r\n\r\n  _config: SxNgxFabricDialogConfig;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    // private _focusTrapFactory: FocusTrapFactory,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    @Optional() @Inject(DOCUMENT) private _document: any\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    // if (this._portalOutlet.hasAttached()) {\r\n    //   throw new Error('Has already attached')\r\n    // }\r\n\r\n    return this._portalOutlet.attachComponentPortal(portal);\r\n  }\r\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n}\r\n","import { OverlayRef } from '@angular/cdk/overlay';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\nexport class SxNgxFabricDialogRef<T> {\r\n  private _beforeClose = new Subject<any>();\r\n  private _afterClosed = new Subject<any>();\r\n\r\n  componentInstance: T;\r\n\r\n  constructor(private overlayRef: OverlayRef) {}\r\n\r\n  close(value?: any): void {\r\n    this.overlayRef.dispose();\r\n    this._afterClosed.next(value);\r\n    this._afterClosed.complete();\r\n    this.componentInstance = null;\r\n\r\n    // this.componentInstance.animationStateChanged\r\n    //   .filter(event => event.phaseName === 'start')\r\n    //   .take(1)\r\n    //   .subscribe(() => {\r\n    //     this._beforeClose.next();\r\n    //     this._beforeClose.complete();\r\n    //     this.overlayRef.detachBackdrop();\r\n    //   });\r\n\r\n    // this.componentInstance.animationStateChanged\r\n    //   .filter(event => event.phaseName === 'done' && event.toState === 'leave')\r\n    //   .take(1)\r\n    //   .subscribe(() => {\r\n    //     this.overlayRef.dispose();\r\n    //     this._afterClosed.next();\r\n    //     this._afterClosed.complete();\r\n    //     this.componentInstance = null;\r\n    //   });\r\n\r\n    // this.componentInstance.startExitAnimation();\r\n  }\r\n\r\n  afterClosed(): Observable<any> {\r\n    return this._afterClosed.asObservable();\r\n  }\r\n\r\n  beforeClose(): Observable<any> {\r\n    return this._beforeClose.asObservable();\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const SX_NGX_FABRIC_DIALOG_DATA = new InjectionToken<any>('SX_NGX_FABRIC_DIALOG_DATA');\r\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ComponentPortal, ComponentType, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\r\nimport { ComponentRef, Injectable, Injector, TemplateRef } from '@angular/core';\r\nimport { SxNgxFabricDialogConfig } from './dialog-config';\r\nimport { SxNgxDialogContainerComponent } from './dialog-container.component';\r\nimport { SxNgxFabricDialogRef } from './dialog-ref';\r\nimport { SX_NGX_FABRIC_DIALOG_DATA } from './dialog-tokens';\r\n\r\nconst DEFAULT_CONFIG: SxNgxFabricDialogConfig = {\r\n  hasBackdrop: true,\r\n  backdropClass: 'ms-Overlay--dark',\r\n  panelClass: 'tm-file-preview-dialog-panel',\r\n  minWidth: '250px',\r\n  maxWidth: '80vw',\r\n  minHeight: '100px',\r\n  maxHeight: '80vh'\r\n};\r\n\r\n@Injectable()\r\nexport class SxNgxFabricDialogService {\r\n  constructor(private injector: Injector, private overlay: Overlay) {}\r\n\r\n  open<T>(component: ComponentType<T>, config: SxNgxFabricDialogConfig = {}): SxNgxFabricDialogRef<T> {\r\n    // Override default configuration\r\n    const dialogConfig = { ...DEFAULT_CONFIG, ...config };\r\n\r\n    // Returns an OverlayRef which is a PortalHost\r\n    const overlayRef = this.createOverlay(dialogConfig);\r\n\r\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\r\n\r\n    // Instantiate remote control\r\n    const dialogRef = this._attachDialogContent(component, dialogContainer, overlayRef, config);\r\n\r\n    overlayRef.backdropClick().subscribe(_ => dialogRef.close());\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  private createOverlay(config: SxNgxFabricDialogConfig) {\r\n    const overlayConfig = this.getOverlayConfig(config);\r\n    return this.overlay.create(overlayConfig);\r\n  }\r\n\r\n  private getOverlayConfig(config: SxNgxFabricDialogConfig): OverlayConfig {\r\n    const positionStrategy = this.overlay\r\n      .position()\r\n      .global()\r\n      .centerHorizontally()\r\n      .centerVertically();\r\n\r\n    const overlayConfig = new OverlayConfig({\r\n      hasBackdrop: config.hasBackdrop,\r\n      backdropClass: config.backdropClass,\r\n      panelClass: config.panelClass,\r\n      scrollStrategy: this.overlay.scrollStrategies.block(),\r\n      positionStrategy: positionStrategy,\r\n      minWidth: config.minWidth,\r\n      maxWidth: config.maxWidth,\r\n      minHeight: config.minHeight,\r\n      maxHeight: config.maxHeight\r\n    });\r\n\r\n    return overlayConfig;\r\n  }\r\n\r\n  private attachDialogContainer<T>(\r\n    component: ComponentType<T>,\r\n    overlayRef: OverlayRef,\r\n    config: SxNgxFabricDialogConfig,\r\n    dialogRef: SxNgxFabricDialogRef<T>\r\n  ) {\r\n    const injector = this.createInjector(config, dialogRef);\r\n\r\n    const containerPortal = new ComponentPortal(component, null, injector);\r\n    const containerRef: ComponentRef<T> = overlayRef.attach(containerPortal);\r\n\r\n    return containerRef.instance;\r\n  }\r\n\r\n  private _attachDialogContainer(overlay: OverlayRef, config: SxNgxFabricDialogConfig): SxNgxDialogContainerComponent {\r\n    const containerPortal = new ComponentPortal(SxNgxDialogContainerComponent, null);\r\n    const containerRef: ComponentRef<SxNgxDialogContainerComponent> = overlay.attach(containerPortal);\r\n    containerRef.instance._config = config;\r\n\r\n    return containerRef.instance;\r\n  }\r\n\r\n  private _attachDialogContent<T>(\r\n    componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\r\n    dialogContainer: SxNgxDialogContainerComponent,\r\n    overlayRef: OverlayRef,\r\n    config: SxNgxFabricDialogConfig\r\n  ): SxNgxFabricDialogRef<T> {\r\n    // Create a reference to the dialog we're creating in order to give the user a handle\r\n    // to modify and close it.\r\n    const dialogRef = new SxNgxFabricDialogRef<T>(overlayRef);\r\n\r\n    // When the dialog backdrop is clicked, we want to close it.\r\n    if (config.hasBackdrop) {\r\n      overlayRef.backdropClick().subscribe(() => {\r\n        // if (!dialogRef.disableClose) {\r\n        dialogRef.close();\r\n        // }\r\n      });\r\n    }\r\n\r\n    // Close when escape keydown event occurs\r\n    // overlayRef.keydownEvents().pipe(\r\n    //   filter(event => event.keyCode === ESCAPE && !dialogRef.disableClose)\r\n    // ).subscribe(() => dialogRef.close());\r\n\r\n    if (componentOrTemplateRef instanceof TemplateRef) {\r\n      dialogContainer.attachTemplatePortal(\r\n        new TemplatePortal<T>(componentOrTemplateRef, null, <any>{ $implicit: config.data, dialogRef })\r\n      );\r\n    } else {\r\n      const injector = this.createInjector<T>(config, dialogRef);\r\n      const contentRef = dialogContainer.attachComponentPortal<T>(new ComponentPortal(<any>componentOrTemplateRef, undefined, injector));\r\n      dialogRef.componentInstance = contentRef.instance;\r\n    }\r\n\r\n    // dialogRef\r\n    //   .updateSize(config.width, config.height)\r\n    //   .updatePosition(config.position);\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  private createInjector<T>(config: SxNgxFabricDialogConfig, dialogRef: SxNgxFabricDialogRef<T>): PortalInjector {\r\n    const injectionTokens = new WeakMap();\r\n\r\n    injectionTokens.set(SxNgxFabricDialogRef, dialogRef);\r\n    injectionTokens.set(SX_NGX_FABRIC_DIALOG_DATA, config.data);\r\n\r\n    return new PortalInjector(this.injector, injectionTokens);\r\n  }\r\n}\r\n","import { SxNgxDialogContainerComponent } from './dialog-container.component';\r\n\r\nimport {Directive, Input, OnChanges, OnInit, Optional, SimpleChanges} from '@angular/core';\r\nimport { SxNgxFabricDialogRef } from './dialog-ref';\r\n\r\n/** Counter used to generate unique IDs for dialog elements. */\r\nlet dialogElementUid = 0;\r\n\r\n/**\r\n * Button that will close the current dialog.\r\n */\r\n@Directive({\r\n  selector: `button[sx-ngx-fabric-dialog-close], button[sxNgxFabricDialogClose]`,\r\n  exportAs: 'sxNgxFabricDialogClose',\r\n  host: {\r\n    '(click)': 'dialogRef.close(dialogResult)',\r\n    '[attr.aria-label]': 'ariaLabel',\r\n    'type': 'button', // Prevents accidental form submits.\r\n  }\r\n})\r\nexport class SxNgxFabricDialogClose implements OnChanges {\r\n  /** Screenreader label for the button. */\r\n  @Input('aria-label') ariaLabel: string = 'Close dialog';\r\n\r\n  /** Dialog close input. */\r\n  @Input('sx-ngx-fabric-dialog-close') dialogResult: any;\r\n\r\n  @Input('sxNgxFabricDialogClose') dialogClose: any;\r\n\r\n  constructor(public dialogRef: SxNgxFabricDialogRef<any>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const proxiedChange = changes._sxNgxFabricDialogClose || changes._sxNgxFabricDialogCloseResult;\r\n\r\n    if (proxiedChange) {\r\n      this.dialogResult = proxiedChange.currentValue;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\r\n */\r\n@Directive({\r\n  selector: '[sx-ngx-fabric-dialog-title], [sxNgxFabricDialogTitle]',\r\n  exportAs: 'sxNgxFabricDialogTitle',\r\n  host: {\r\n    'class': 'ms-Dialog-title',\r\n    '[id]': 'id',\r\n  },\r\n})\r\nexport class SxNgxFabricDialogTitle {\r\n  @Input() id = `sx-ngx-fabric-dialog-title-${dialogElementUid++}`;\r\n\r\n  constructor(@Optional() private _container: SxNgxDialogContainerComponent) { }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Scrollable content container of a dialog.\r\n */\r\n@Directive({\r\n  selector: `[sx-ngx-fabric-dialog-content], sx-ngx-fabric-dialog-content, [sxNgxFabricDialogContent]`,\r\n  host: {'class': 'ms-Dialog-content'}\r\n})\r\nexport class SxNgxFabricDialogContent { }\r\n\r\n\r\n/**\r\n * Container for the bottom action buttons in a dialog.\r\n * Stays fixed to the bottom when scrolling.\r\n */\r\n@Directive({\r\n  selector: `[sx-ngx-fabric-dialog-actions], sx-ngx-fabric-dialog-actions, [sxNgxFabricDialogActions]`,\r\n  host: {'class': 'ms-Dialog-actions'}\r\n})\r\nexport class SxNgxFabricDialogActions { }\r\n","import { PortalModule } from '@angular/cdk/portal';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SxNgxDialogContainerComponent } from './dialog-container.component';\r\nimport { SxNgxFabricDialogService } from './dialog.service';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { SxNgxFabricDialogActions, SxNgxFabricDialogClose, SxNgxFabricDialogTitle, SxNgxFabricDialogContent } from './dialog-content.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    PortalModule\r\n  ],\r\n  declarations: [\r\n    SxNgxDialogContainerComponent,\r\n    SxNgxFabricDialogClose,\r\n    SxNgxFabricDialogTitle,\r\n    SxNgxFabricDialogContent,\r\n    SxNgxFabricDialogActions\r\n  ],\r\n  entryComponents: [\r\n    SxNgxDialogContainerComponent\r\n  ],\r\n  exports: [\r\n    SxNgxFabricDialogClose,\r\n    SxNgxFabricDialogTitle,\r\n    SxNgxFabricDialogContent,\r\n    SxNgxFabricDialogActions\r\n  ],\r\n  providers: [\r\n    SxNgxFabricDialogService\r\n  ]\r\n})\r\nexport class DialogModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: DialogModule,\r\n      providers: [SxNgxFabricDialogService]\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit, Input, ChangeDetectorRef, forwardRef, ChangeDetectionStrategy, HostBinding } from '@angular/core';\r\nimport { Guid } from '../utils/guid';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-toggle',\r\n  templateUrl: './toggle.component.html',\r\n  styleUrls: ['./toggle.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => ToggleComponent),\r\n    multi: true\r\n  }],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    'class': 'ms-Toggle'\r\n  }\r\n})\r\nexport class ToggleComponent {\r\n\r\n  private _checked = false;\r\n  @Input() get checked() {\r\n    return this._checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    if (checked !== this.checked) {\r\n      this._checked = checked;\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  @Input() disabled = false;\r\n\r\n  @Input() offText = 'Off';\r\n\r\n  @Input() onText = 'On';\r\n\r\n  @Input() textLeft = false;\r\n\r\n  @HostBinding('class.is-disabled') get classIsDisabled() { return this.disabled; }\r\n\r\n  @HostBinding('class.ms-Toggle--textLeft') get classTextLeft() { return this.textLeft; }\r\n\r\n  inputId = Guid.uniqueid();\r\n\r\n  constructor(\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  onInputClick(evt: MouseEvent) {\r\n    evt.stopPropagation();\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    this.checked = !this.checked;\r\n    this._onChange(this.checked);\r\n  }\r\n\r\n  // ControlValueAccessor implementation\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private _onChange = (_: any) => { };\r\n  private _onTouched = () => { };\r\n\r\n  public writeValue(val: any) {\r\n    this.checked = val;\r\n  }\r\n\r\n  public registerOnChange(fn: (_: any) => void): void { this._onChange = fn; }\r\n  public registerOnTouched(fn: () => void): void { this._onTouched = fn; }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ToggleComponent } from './toggle.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    ToggleComponent\r\n  ],\r\n  exports: [\r\n    ToggleComponent\r\n  ]\r\n})\r\nexport class ToggleModule { }\r\n","import { Component, OnInit, ViewChild, TemplateRef, Output, EventEmitter, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\r\nimport { VerticalConnectionPos, HorizontalConnectionPos } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-callout',\r\n  templateUrl: './callout.component.html',\r\n  styleUrls: ['./callout.component.scss']\r\n})\r\nexport class CalloutComponent {\r\n\r\n  @Input() xPosition: string;\r\n\r\n  @Input() yPosition: string;\r\n\r\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n\r\n  @ViewChild('beak') beak: ElementRef;\r\n\r\n  @Output() closed = new EventEmitter<void | 'click' | 'keydown'>();\r\n\r\n  private _beakPosition;\r\n  get beakPosition() { return this._beakPosition; }\r\n  set beakPosition(val) {\r\n    this._beakPosition = val;\r\n    this.updateBeakPosition();\r\n  }\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n  ) { }\r\n\r\n  updateBeakPosition() {\r\n    if (this.beakPosition) {\r\n      this.beak.nativeElement.style.top = this.beakPosition.top;\r\n      this.beak.nativeElement.style.left = this.beakPosition.left;\r\n      this.beak.nativeElement.style.right = this.beakPosition.right;\r\n      this.beak.nativeElement.style.bottom = this.beakPosition.bottom;\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  ConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  VerticalConnectionPos\r\n} from '@angular/cdk/overlay';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport { Directive, ElementRef, Input, ViewContainerRef } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core/src/metadata/lifecycle_hooks';\r\nimport { Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { CalloutComponent } from './callout.component';\r\n\r\n@Directive({\r\n  selector: '[sxNgxFabricCalloutTrigger]',\r\n  host: {\r\n    'aria-haspopup': 'true',\r\n    '(click)': '_handleClick($event)'\r\n  },\r\n  exportAs: 'sxNgxFabricCalloutTrigger'\r\n})\r\nexport class CalloutTriggerDirective implements OnDestroy {\r\n  @Input()\r\n  get sxNgxFabricCalloutTrigger(): CalloutComponent {\r\n    return this.callout;\r\n  }\r\n\r\n  set sxNgxFabricCalloutTrigger(val: CalloutComponent) {\r\n    this.callout = val;\r\n  }\r\n\r\n  private _portal: TemplatePortal<any>;\r\n  private _overlayRef: OverlayRef | null = null;\r\n  private _calloutOpen = false;\r\n  private _closeSubscription = Subscription.EMPTY;\r\n  private _positionSubscription = Subscription.EMPTY;\r\n\r\n  callout: CalloutComponent;\r\n\r\n  constructor(private _overlay: Overlay, private _element: ElementRef, private _viewContainerRef: ViewContainerRef) {}\r\n\r\n  ngOnDestroy() {\r\n    this._closeSubscription.unsubscribe();\r\n    this._positionSubscription.unsubscribe();\r\n  }\r\n\r\n  openCallout(): void {\r\n    if (!this._calloutOpen) {\r\n      this._createOverlay().attach(this._portal);\r\n      setTimeout(() => {\r\n        this.callout.updateBeakPosition();\r\n      });\r\n    }\r\n  }\r\n\r\n  closeMenu(): void {\r\n    this.callout.closed.emit();\r\n  }\r\n\r\n  _handleClick() {\r\n    this.openCallout();\r\n  }\r\n\r\n  private _createOverlay(): OverlayRef {\r\n    if (!this._overlayRef) {\r\n      this._portal = new TemplatePortal(this.callout.templateRef, this._viewContainerRef);\r\n      const config = this._getOverlayConfig();\r\n      this._overlayRef = this._overlay.create(config);\r\n      this._closeSubscription = this._overlayRef.backdropClick().subscribe(_ => {\r\n        this._overlayRef.detach();\r\n      });\r\n    }\r\n\r\n    return this._overlayRef;\r\n  }\r\n\r\n  private _getOverlayConfig(): OverlayConfig {\r\n    const position = this._getPosition();\r\n    this._subscribeToPositions(position);\r\n    return new OverlayConfig({\r\n      hasBackdrop: true,\r\n      positionStrategy: position,\r\n      scrollStrategy: this._overlay.scrollStrategies.reposition()\r\n    });\r\n  }\r\n\r\n  private _getPosition(): ConnectedPositionStrategy {\r\n    const [originX, originFallbackX]: HorizontalConnectionPos[] = this.callout.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n    const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\r\n      this.callout.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\r\n    const [overlayX, overlayFallbackX] = [originX, originFallbackX];\r\n    const offsetY = 0;\r\n\r\n    originY = overlayY === 'top' ? 'bottom' : 'top';\r\n    originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\r\n\r\n    return this._overlay\r\n      .position()\r\n      .connectedTo(this._element, { originX, originY }, { overlayX, overlayY })\r\n      .withOffsetY(offsetY)\r\n      .withFallbackPosition({ originX: originFallbackX, originY }, { overlayX: overlayFallbackX, overlayY })\r\n      .withFallbackPosition({ originX, originY: originFallbackY }, { overlayX, overlayY: overlayFallbackY }, undefined, -offsetY)\r\n      .withFallbackPosition(\r\n        { originX: originFallbackX, originY: originFallbackY },\r\n        { overlayX: overlayFallbackX, overlayY: overlayFallbackY },\r\n        undefined,\r\n        -offsetY\r\n      );\r\n  }\r\n\r\n  private _subscribeToPositions(position: ConnectedPositionStrategy) {\r\n    this._positionSubscription = position.onPositionChange.pipe(distinctUntilChanged(null, x => x.connectionPair)).subscribe(pos => {\r\n      const isCalloutUnderTrigger = pos.connectionPair.overlayY === 'top';\r\n      const isCalloutLeftAlignedToTrigger = pos.connectionPair.overlayX === 'start';\r\n      const triggerMiddle = this._portal.viewContainerRef.element.nativeElement.offsetWidth / 2 - 14;\r\n\r\n      this.callout.beakPosition = {\r\n        top: isCalloutUnderTrigger ? '-6px' : null,\r\n        bottom: !isCalloutUnderTrigger ? '-6px' : null,\r\n        left: isCalloutLeftAlignedToTrigger ? triggerMiddle + 'px' : null,\r\n        right: !isCalloutLeftAlignedToTrigger ? triggerMiddle + 'px' : null\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CalloutComponent } from './callout.component';\r\nimport { CalloutTriggerDirective } from './callout-trigger.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    CalloutComponent,\r\n    CalloutTriggerDirective\r\n  ],\r\n  exports: [\r\n    CalloutComponent,\r\n    CalloutTriggerDirective\r\n  ]\r\n})\r\nexport class CalloutModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavComponent } from './nav.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NavComponent\r\n  ],\r\n  exports: [\r\n    NavComponent\r\n  ]\r\n})\r\nexport class NavModule { }\r\n","import { NgModule } from '@angular/core';\nimport { SxNgxFabricComponent } from './sx-ngx-fabric.component';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { CommonModule } from '@angular/common';\nimport { CheckboxModule } from './checkbox/checkbox.module';\nimport { ButtonModule } from './button/button.module';\nimport { TextFieldModule } from './text-field/text-field.module';\nimport { DialogModule } from './dialog/dialog.module';\nimport { ToggleModule } from './toggle/toggle.module';\nimport { CalloutModule } from './callout/callout.module';\nimport { NavModule } from './nav/nav.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckboxModule,\n    ButtonModule,\n    TextFieldModule,\n    DialogModule.forRoot(),\n    ToggleModule,\n    BreadcrumbModule,\n    CalloutModule,\n    NavModule\n  ],\n  declarations: [SxNgxFabricComponent],\n  exports: [\n    SxNgxFabricComponent,\n    CheckboxModule,\n    ButtonModule,\n    TextFieldModule,\n    DialogModule,\n    ToggleModule,\n    BreadcrumbModule,\n    CalloutModule,\n    NavModule\n  ]\n})\nexport class SxNgxFabricModule {}\n"],"names":["tslib_1.__extends"],"mappings":"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"}
