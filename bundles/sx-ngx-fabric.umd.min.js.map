{"version":3,"sources":["ng://sx-ngx-fabric/lib/sx-ngx-fabric.service.ts","ng://sx-ngx-fabric/lib/sx-ngx-fabric.component.ts","ng://sx-ngx-fabric/lib/breadcrumb/breadcrumb.component.ts","ng://sx-ngx-fabric/lib/breadcrumb/breadcrumb.module.ts","ng://sx-ngx-fabric/lib/utils/guid.ts","ng://sx-ngx-fabric/lib/checkbox/checkbox.component.ts","ng://sx-ngx-fabric/lib/checkbox/checkbox.module.ts","ng://sx-ngx-fabric/lib/button/button.component.ts","ng://sx-ngx-fabric/lib/button/button.module.ts","ng://sx-ngx-fabric/lib/text-field/text-field.component.ts","ng://sx-ngx-fabric/lib/text-field/text-field.module.ts","node_modules/tslib/tslib.es6.js","ng://sx-ngx-fabric/lib/dialog/dialog-container.component.ts","ng://sx-ngx-fabric/lib/dialog/dialog-ref.ts","ng://sx-ngx-fabric/lib/dialog/dialog-tokens.ts","ng://sx-ngx-fabric/lib/dialog/dialog.service.ts","ng://sx-ngx-fabric/lib/dialog/dialog-content.directive.ts","ng://sx-ngx-fabric/lib/dialog/dialog.module.ts","ng://sx-ngx-fabric/lib/toggle/toggle.component.ts","ng://sx-ngx-fabric/lib/toggle/toggle.module.ts","ng://sx-ngx-fabric/lib/callout/callout.component.ts","ng://sx-ngx-fabric/lib/callout/callout-trigger.directive.ts","ng://sx-ngx-fabric/lib/callout/callout.module.ts","ng://sx-ngx-fabric/lib/nav/nav.component.ts","ng://sx-ngx-fabric/lib/nav/nav.module.ts","ng://sx-ngx-fabric/lib/sx-ngx-fabric.module.ts"],"names":["SxNgxFabricService","Injectable","args","providedIn","SxNgxFabricComponent","prototype","ngOnInit","Component","selector","template","BreadcrumbComponent","EventEmitter","onClick","item","this","itemClick","next","Input","Output","BreadcrumbModule","NgModule","imports","CommonModule","declarations","exports","Guid","uniqueid","idstr","String","fromCharCode","Math","floor","random","ascicode","length","CheckboxComponent","changeDetectorRef","_","Object","defineProperty","_checked","checked","markForCheck","onInputClick","evt","stopPropagation","toggle","_onChange","setDisabledState","isDisabled","disabled","writeValue","val","registerOnChange","fn","registerOnTouched","_onTouched","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","CheckboxModule","ButtonComponent","primary","HostBinding","ButtonModule","TextFieldComponent","multiline","onChange","value","target","onTouched","TextFieldModule","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","call","apply","__read","o","m","Symbol","iterator","r","e","ar","done","push","error","SxNgxDialogContainerComponent","_elementRef","_changeDetectorRef","_document","_this","_super","__extends","__","constructor","create","tslib_1.__extends","attachComponentPortal","portal","_portalOutlet","attachTemplatePortal","Error","ElementRef","Optional","type","Inject","DOCUMENT","ViewChild","BasePortalOutlet","SxNgxFabricDialogRef","overlayRef","Subject","close","dispose","_afterClosed","complete","componentInstance","afterClosed","asObservable","beforeClose","_beforeClose","SX_NGX_FABRIC_DIALOG_DATA","InjectionToken","DEFAULT_CONFIG","hasBackdrop","backdropClass","panelClass","minWidth","maxWidth","minHeight","maxHeight","SxNgxFabricDialogService","injector","overlay","open","component","config","dialogConfig","createOverlay","dialogContainer","_attachDialogContainer","dialogRef","_attachDialogContent","backdropClick","subscribe","overlayConfig","getOverlayConfig","positionStrategy","position","global","centerHorizontally","centerVertically","OverlayConfig","scrollStrategy","scrollStrategies","block","attachDialogContainer","createInjector","containerPortal","ComponentPortal","attach","instance","containerRef","_config","componentOrTemplateRef","TemplateRef","TemplatePortal","$implicit","data","contentRef","undefined","injectionTokens","WeakMap","set","PortalInjector","Injector","Overlay","dialogElementUid","SxNgxFabricDialogClose","ngOnChanges","changes","proxiedChange","dialogResult","currentValue","Directive","exportAs","host","(click)","[attr.aria-label]","SxNgxFabricDialogTitle","_container","class","[id]","decorators","DialogModule","forRoot","ngModule","OverlayModule","PortalModule","SxNgxFabricDialogContent","SxNgxFabricDialogActions","entryComponents","ToggleComponent","textLeft","ToggleModule","CalloutComponent","elementRef","_beakPosition","updateBeakPosition","beakPosition","beak","nativeElement","style","top","left","right","bottom","CalloutTriggerDirective","_overlay","_element","_viewContainerRef","Subscription","EMPTY","callout","ngOnDestroy","_closeSubscription","unsubscribe","_positionSubscription","openCallout","_calloutOpen","_createOverlay","_portal","setTimeout","closeMenu","closed","emit","_handleClick","_overlayRef","templateRef","_getOverlayConfig","detach","_getPosition","_subscribeToPositions","reposition","_a","xPosition","originX","originFallbackX","_b","yPosition","overlayY","overlayFallbackY","_c","originY","originFallbackY","_d","overlayX","overlayFallbackX","connectedTo","withOffsetY","withFallbackPosition","onPositionChange","pipe","distinctUntilChanged","x","connectionPair","pos","isCalloutUnderTrigger","isCalloutLeftAlignedToTrigger","triggerMiddle","viewContainerRef","element","offsetWidth","aria-haspopup","ViewContainerRef","CalloutModule","NavComponent","NavModule","SxNgxFabricModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SxNgxFabricService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sx-sx-ngx-fabric',\n  template: `\n    <p>\n      sx-ngx-fabric works!\n    </p>\n  `,\n  styles: []\n})\nexport class SxNgxFabricComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { IBreadcrumbItem } from \"./i-breadcrumb-item\";\r\n\r\n@Component({\r\n  selector: \"sx-ngx-fabric-breadcrumb\",\r\n  templateUrl: \"./breadcrumb.component.html\",\r\n  styleUrls: [\"./breadcrumb.component.scss\"]\r\n})\r\nexport class BreadcrumbComponent {\r\n  @Input() items: Array<IBreadcrumbItem>;\r\n\r\n  @Output() itemClick = new EventEmitter<IBreadcrumbItem>();\r\n\r\n  constructor() {}\r\n\r\n  onClick(item: IBreadcrumbItem) {\r\n    this.itemClick.next(item);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BreadcrumbComponent } from './breadcrumb.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    BreadcrumbComponent\r\n  ],\r\n  exports: [\r\n    BreadcrumbComponent\r\n  ]\r\n})\r\nexport class BreadcrumbModule { }\r\n","export class Guid {\r\n    static uniqueid() {\r\n        // always start with a letter (for DOM friendlyness)\r\n        let idstr = String.fromCharCode(Math.floor((Math.random() * 25) + 65));\r\n        do {\r\n            // between numbers and characters (48 is 0 and 90 is Z (42-48 = 90)\r\n            const ascicode = Math.floor((Math.random() * 42) + 48);\r\n            if (ascicode < 58 || ascicode > 64) {\r\n                // exclude all chars between : (58) and @ (64)\r\n                idstr += String.fromCharCode(ascicode);\r\n            }\r\n        } while (idstr.length < 32);\r\n\r\n        return (idstr);\r\n    }\r\n}","import { Component, OnInit, Input, forwardRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Guid } from '../utils/guid';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => CheckboxComponent),\r\n    multi: true\r\n  }],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CheckboxComponent {\r\n\r\n  private _checked = false;\r\n  @Input() get checked() {\r\n    return this._checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    if (checked !== this.checked) {\r\n      this._checked = checked;\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  @Input() disabled = false;\r\n\r\n  inputId = Guid.uniqueid();\r\n\r\n  constructor(\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  onInputClick(evt: MouseEvent) {\r\n    evt.stopPropagation();\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    this.checked = !this.checked;\r\n    this._onChange(this.checked);\r\n  }\r\n\r\n  // ControlValueAccessor implementation\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private _onChange = (_: any) => { };\r\n  private _onTouched = () => { };\r\n\r\n  public writeValue(val: any) {\r\n    this.checked = val;\r\n  }\r\n\r\n  public registerOnChange(fn: (_: any) => void): void { this._onChange = fn; }\r\n  public registerOnTouched(fn: () => void): void { this._onTouched = fn; }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CheckboxComponent } from './checkbox.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    CheckboxComponent\r\n  ],\r\n  exports: [\r\n    CheckboxComponent\r\n  ]\r\n})\r\nexport class CheckboxModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'button[sx-ngx-fabric-button], a[sx-ngx-fabric-button]',\r\n  styleUrls: ['./button.component.scss'],\r\n  templateUrl: './button.component.html',\r\n  // host: {'class': 'mat-button'}\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n\r\n  @Input() primary = false;\r\n\r\n  @HostBinding('class.ms-Button') classes = true;\r\n\r\n  @HostBinding('class.ms-Button--primary') get classPrimary() { return this.primary; }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonComponent } from './button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    ButtonComponent\r\n  ],\r\n  exports: [\r\n    ButtonComponent\r\n  ]\r\n})\r\nexport class ButtonModule { }\r\n","import { Component, OnInit, HostBinding, Input, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-text-field',\r\n  templateUrl: './text-field.component.html',\r\n  styleUrls: ['./text-field.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TextFieldComponent),\r\n    multi: true\r\n  }],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TextFieldComponent {\r\n\r\n  @Input() label;\r\n\r\n  @Input() multiline = false;\r\n\r\n  @Input() rows = 3;\r\n\r\n  @Input() type = 'text';\r\n\r\n  @Input() placeholder;\r\n\r\n  @Input() disabled = false;\r\n\r\n  @Input() required = false;\r\n\r\n  value = null;\r\n\r\n  @HostBinding('class') classes = 'ms-TextField';\r\n\r\n  @HostBinding('class.ms-TextField--multiline') get classMultiline() { return this.multiline; }\r\n\r\n  @HostBinding('class.is-disabled') get classIsDisabled() { return this.disabled; }\r\n\r\n\r\n\r\n  constructor(\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  onChange(evt) {\r\n    evt.stopPropagation();\r\n    this.value = evt.target.value;\r\n    this._onChange(this.value);\r\n  }\r\n\r\n  onTouched(evt) {\r\n    this._onTouched();\r\n  }\r\n\r\n  // ControlValueAccessor implementation\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private _onChange = (_: any) => { };\r\n  private _onTouched = () => { };\r\n\r\n  public writeValue(val: any) {\r\n    this.value = val;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  public registerOnChange(fn: (_: any) => void): void { this._onChange = fn; }\r\n  public registerOnTouched(fn: () => void): void { this._onTouched = fn; }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TextFieldComponent } from './text-field.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    TextFieldComponent\r\n  ],\r\n  exports: [\r\n    TextFieldComponent\r\n  ]\r\n})\r\nexport class TextFieldModule { }\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, ViewChild, ComponentRef, EmbeddedViewRef, Optional, Inject, ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { CdkPortalOutlet, BasePortalOutlet, TemplatePortal, CdkPortal } from '@angular/cdk/portal';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { SxNgxFabricDialogConfig } from './dialog-config';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-dialog-container',\r\n  templateUrl: './dialog-container.component.html'\r\n})\r\nexport class SxNgxDialogContainerComponent extends BasePortalOutlet {\r\n\r\n  /** The portal outlet inside of this container into which the dialog content will be loaded. */\r\n  @ViewChild('portalOutlet') _portalOutlet: CdkPortalOutlet;\r\n\r\n  _config: SxNgxFabricDialogConfig;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    // private _focusTrapFactory: FocusTrapFactory,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    @Optional() @Inject(DOCUMENT) private _document: any\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    // if (this._portalOutlet.hasAttached()) {\r\n    //   throw new Error('Has already attached')\r\n    // }\r\n\r\n    return this._portalOutlet.attachComponentPortal(portal);\r\n  }\r\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n}\r\n","import { OverlayRef } from '@angular/cdk/overlay';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\nexport class SxNgxFabricDialogRef<T> {\r\n  private _beforeClose = new Subject<any>();\r\n  private _afterClosed = new Subject<any>();\r\n\r\n  componentInstance: T;\r\n\r\n  constructor(private overlayRef: OverlayRef) {}\r\n\r\n  close(value?: any): void {\r\n    this.overlayRef.dispose();\r\n    this._afterClosed.next(value);\r\n    this._afterClosed.complete();\r\n    this.componentInstance = null;\r\n\r\n    // this.componentInstance.animationStateChanged\r\n    //   .filter(event => event.phaseName === 'start')\r\n    //   .take(1)\r\n    //   .subscribe(() => {\r\n    //     this._beforeClose.next();\r\n    //     this._beforeClose.complete();\r\n    //     this.overlayRef.detachBackdrop();\r\n    //   });\r\n\r\n    // this.componentInstance.animationStateChanged\r\n    //   .filter(event => event.phaseName === 'done' && event.toState === 'leave')\r\n    //   .take(1)\r\n    //   .subscribe(() => {\r\n    //     this.overlayRef.dispose();\r\n    //     this._afterClosed.next();\r\n    //     this._afterClosed.complete();\r\n    //     this.componentInstance = null;\r\n    //   });\r\n\r\n    // this.componentInstance.startExitAnimation();\r\n  }\r\n\r\n  afterClosed(): Observable<any> {\r\n    return this._afterClosed.asObservable();\r\n  }\r\n\r\n  beforeClose(): Observable<any> {\r\n    return this._beforeClose.asObservable();\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const SX_NGX_FABRIC_DIALOG_DATA = new InjectionToken<any>('SX_NGX_FABRIC_DIALOG_DATA');\r\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ComponentPortal, ComponentType, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\r\nimport { ComponentRef, Injectable, Injector, TemplateRef } from '@angular/core';\r\nimport { SxNgxFabricDialogConfig } from './dialog-config';\r\nimport { SxNgxDialogContainerComponent } from './dialog-container.component';\r\nimport { SxNgxFabricDialogRef } from './dialog-ref';\r\nimport { SX_NGX_FABRIC_DIALOG_DATA } from './dialog-tokens';\r\n\r\nconst DEFAULT_CONFIG: SxNgxFabricDialogConfig = {\r\n  hasBackdrop: true,\r\n  backdropClass: 'ms-Overlay--dark',\r\n  panelClass: 'tm-file-preview-dialog-panel',\r\n  minWidth: '250px',\r\n  maxWidth: '80vw',\r\n  minHeight: '100px',\r\n  maxHeight: '80vh'\r\n};\r\n\r\n@Injectable()\r\nexport class SxNgxFabricDialogService {\r\n  constructor(private injector: Injector, private overlay: Overlay) {}\r\n\r\n  open<T>(component: ComponentType<T>, config: SxNgxFabricDialogConfig = {}): SxNgxFabricDialogRef<T> {\r\n    // Override default configuration\r\n    const dialogConfig = { ...DEFAULT_CONFIG, ...config };\r\n\r\n    // Returns an OverlayRef which is a PortalHost\r\n    const overlayRef = this.createOverlay(dialogConfig);\r\n\r\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\r\n\r\n    // Instantiate remote control\r\n    const dialogRef = this._attachDialogContent(component, dialogContainer, overlayRef, config);\r\n\r\n    overlayRef.backdropClick().subscribe(_ => dialogRef.close());\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  private createOverlay(config: SxNgxFabricDialogConfig) {\r\n    const overlayConfig = this.getOverlayConfig(config);\r\n    return this.overlay.create(overlayConfig);\r\n  }\r\n\r\n  private getOverlayConfig(config: SxNgxFabricDialogConfig): OverlayConfig {\r\n    const positionStrategy = this.overlay\r\n      .position()\r\n      .global()\r\n      .centerHorizontally()\r\n      .centerVertically();\r\n\r\n    const overlayConfig = new OverlayConfig({\r\n      hasBackdrop: config.hasBackdrop,\r\n      backdropClass: config.backdropClass,\r\n      panelClass: config.panelClass,\r\n      scrollStrategy: this.overlay.scrollStrategies.block(),\r\n      positionStrategy: positionStrategy,\r\n      minWidth: config.minWidth,\r\n      maxWidth: config.maxWidth,\r\n      minHeight: config.minHeight,\r\n      maxHeight: config.maxHeight\r\n    });\r\n\r\n    return overlayConfig;\r\n  }\r\n\r\n  private attachDialogContainer<T>(\r\n    component: ComponentType<T>,\r\n    overlayRef: OverlayRef,\r\n    config: SxNgxFabricDialogConfig,\r\n    dialogRef: SxNgxFabricDialogRef<T>\r\n  ) {\r\n    const injector = this.createInjector(config, dialogRef);\r\n\r\n    const containerPortal = new ComponentPortal(component, null, injector);\r\n    const containerRef: ComponentRef<T> = overlayRef.attach(containerPortal);\r\n\r\n    return containerRef.instance;\r\n  }\r\n\r\n  private _attachDialogContainer(overlay: OverlayRef, config: SxNgxFabricDialogConfig): SxNgxDialogContainerComponent {\r\n    const containerPortal = new ComponentPortal(SxNgxDialogContainerComponent, null);\r\n    const containerRef: ComponentRef<SxNgxDialogContainerComponent> = overlay.attach(containerPortal);\r\n    containerRef.instance._config = config;\r\n\r\n    return containerRef.instance;\r\n  }\r\n\r\n  private _attachDialogContent<T>(\r\n    componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\r\n    dialogContainer: SxNgxDialogContainerComponent,\r\n    overlayRef: OverlayRef,\r\n    config: SxNgxFabricDialogConfig\r\n  ): SxNgxFabricDialogRef<T> {\r\n    // Create a reference to the dialog we're creating in order to give the user a handle\r\n    // to modify and close it.\r\n    const dialogRef = new SxNgxFabricDialogRef<T>(overlayRef);\r\n\r\n    // When the dialog backdrop is clicked, we want to close it.\r\n    if (config.hasBackdrop) {\r\n      overlayRef.backdropClick().subscribe(() => {\r\n        // if (!dialogRef.disableClose) {\r\n        dialogRef.close();\r\n        // }\r\n      });\r\n    }\r\n\r\n    // Close when escape keydown event occurs\r\n    // overlayRef.keydownEvents().pipe(\r\n    //   filter(event => event.keyCode === ESCAPE && !dialogRef.disableClose)\r\n    // ).subscribe(() => dialogRef.close());\r\n\r\n    if (componentOrTemplateRef instanceof TemplateRef) {\r\n      dialogContainer.attachTemplatePortal(\r\n        new TemplatePortal<T>(componentOrTemplateRef, null, <any>{ $implicit: config.data, dialogRef })\r\n      );\r\n    } else {\r\n      const injector = this.createInjector<T>(config, dialogRef);\r\n      const contentRef = dialogContainer.attachComponentPortal<T>(new ComponentPortal(<any>componentOrTemplateRef, undefined, injector));\r\n      dialogRef.componentInstance = contentRef.instance;\r\n    }\r\n\r\n    // dialogRef\r\n    //   .updateSize(config.width, config.height)\r\n    //   .updatePosition(config.position);\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  private createInjector<T>(config: SxNgxFabricDialogConfig, dialogRef: SxNgxFabricDialogRef<T>): PortalInjector {\r\n    const injectionTokens = new WeakMap();\r\n\r\n    injectionTokens.set(SxNgxFabricDialogRef, dialogRef);\r\n    injectionTokens.set(SX_NGX_FABRIC_DIALOG_DATA, config.data);\r\n\r\n    return new PortalInjector(this.injector, injectionTokens);\r\n  }\r\n}\r\n","import { SxNgxDialogContainerComponent } from './dialog-container.component';\r\n\r\nimport {Directive, Input, OnChanges, OnInit, Optional, SimpleChanges} from '@angular/core';\r\nimport { SxNgxFabricDialogRef } from './dialog-ref';\r\n\r\n/** Counter used to generate unique IDs for dialog elements. */\r\nlet dialogElementUid = 0;\r\n\r\n/**\r\n * Button that will close the current dialog.\r\n */\r\n@Directive({\r\n  selector: `button[sx-ngx-fabric-dialog-close], button[sxNgxFabricDialogClose]`,\r\n  exportAs: 'sxNgxFabricDialogClose',\r\n  host: {\r\n    '(click)': 'dialogRef.close(dialogResult)',\r\n    '[attr.aria-label]': 'ariaLabel',\r\n    'type': 'button', // Prevents accidental form submits.\r\n  }\r\n})\r\nexport class SxNgxFabricDialogClose implements OnChanges {\r\n  /** Screenreader label for the button. */\r\n  @Input('aria-label') ariaLabel: string = 'Close dialog';\r\n\r\n  /** Dialog close input. */\r\n  @Input('sx-ngx-fabric-dialog-close') dialogResult: any;\r\n\r\n  @Input('sxNgxFabricDialogClose') dialogClose: any;\r\n\r\n  constructor(public dialogRef: SxNgxFabricDialogRef<any>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const proxiedChange = changes._sxNgxFabricDialogClose || changes._sxNgxFabricDialogCloseResult;\r\n\r\n    if (proxiedChange) {\r\n      this.dialogResult = proxiedChange.currentValue;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\r\n */\r\n@Directive({\r\n  selector: '[sx-ngx-fabric-dialog-title], [sxNgxFabricDialogTitle]',\r\n  exportAs: 'sxNgxFabricDialogTitle',\r\n  host: {\r\n    'class': 'ms-Dialog-title',\r\n    '[id]': 'id',\r\n  },\r\n})\r\nexport class SxNgxFabricDialogTitle {\r\n  @Input() id = `sx-ngx-fabric-dialog-title-${dialogElementUid++}`;\r\n\r\n  constructor(@Optional() private _container: SxNgxDialogContainerComponent) { }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Scrollable content container of a dialog.\r\n */\r\n@Directive({\r\n  selector: `[sx-ngx-fabric-dialog-content], sx-ngx-fabric-dialog-content, [sxNgxFabricDialogContent]`,\r\n  host: {'class': 'ms-Dialog-content'}\r\n})\r\nexport class SxNgxFabricDialogContent { }\r\n\r\n\r\n/**\r\n * Container for the bottom action buttons in a dialog.\r\n * Stays fixed to the bottom when scrolling.\r\n */\r\n@Directive({\r\n  selector: `[sx-ngx-fabric-dialog-actions], sx-ngx-fabric-dialog-actions, [sxNgxFabricDialogActions]`,\r\n  host: {'class': 'ms-Dialog-actions'}\r\n})\r\nexport class SxNgxFabricDialogActions { }\r\n","import { PortalModule } from '@angular/cdk/portal';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SxNgxDialogContainerComponent } from './dialog-container.component';\r\nimport { SxNgxFabricDialogService } from './dialog.service';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { SxNgxFabricDialogActions, SxNgxFabricDialogClose, SxNgxFabricDialogTitle, SxNgxFabricDialogContent } from './dialog-content.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    PortalModule\r\n  ],\r\n  declarations: [\r\n    SxNgxDialogContainerComponent,\r\n    SxNgxFabricDialogClose,\r\n    SxNgxFabricDialogTitle,\r\n    SxNgxFabricDialogContent,\r\n    SxNgxFabricDialogActions\r\n  ],\r\n  entryComponents: [\r\n    SxNgxDialogContainerComponent\r\n  ],\r\n  exports: [\r\n    SxNgxFabricDialogClose,\r\n    SxNgxFabricDialogTitle,\r\n    SxNgxFabricDialogContent,\r\n    SxNgxFabricDialogActions\r\n  ],\r\n  providers: [\r\n    SxNgxFabricDialogService\r\n  ]\r\n})\r\nexport class DialogModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: DialogModule,\r\n      providers: [SxNgxFabricDialogService]\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit, Input, ChangeDetectorRef, forwardRef, ChangeDetectionStrategy, HostBinding } from '@angular/core';\r\nimport { Guid } from '../utils/guid';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-toggle',\r\n  templateUrl: './toggle.component.html',\r\n  styleUrls: ['./toggle.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => ToggleComponent),\r\n    multi: true\r\n  }],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    'class': 'ms-Toggle'\r\n  }\r\n})\r\nexport class ToggleComponent {\r\n\r\n  private _checked = false;\r\n  @Input() get checked() {\r\n    return this._checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    if (checked !== this.checked) {\r\n      this._checked = checked;\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  @Input() disabled = false;\r\n\r\n  @Input() offText = 'Off';\r\n\r\n  @Input() onText = 'On';\r\n\r\n  @Input() textLeft = false;\r\n\r\n  @HostBinding('class.is-disabled') get classIsDisabled() { return this.disabled; }\r\n\r\n  @HostBinding('class.ms-Toggle--textLeft') get classTextLeft() { return this.textLeft; }\r\n\r\n  inputId = Guid.uniqueid();\r\n\r\n  constructor(\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  onInputClick(evt: MouseEvent) {\r\n    evt.stopPropagation();\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    this.checked = !this.checked;\r\n    this._onChange(this.checked);\r\n  }\r\n\r\n  // ControlValueAccessor implementation\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private _onChange = (_: any) => { };\r\n  private _onTouched = () => { };\r\n\r\n  public writeValue(val: any) {\r\n    this.checked = val;\r\n  }\r\n\r\n  public registerOnChange(fn: (_: any) => void): void { this._onChange = fn; }\r\n  public registerOnTouched(fn: () => void): void { this._onTouched = fn; }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ToggleComponent } from './toggle.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    ToggleComponent\r\n  ],\r\n  exports: [\r\n    ToggleComponent\r\n  ]\r\n})\r\nexport class ToggleModule { }\r\n","import { Component, OnInit, ViewChild, TemplateRef, Output, EventEmitter, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\r\nimport { VerticalConnectionPos, HorizontalConnectionPos } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-callout',\r\n  templateUrl: './callout.component.html',\r\n  styleUrls: ['./callout.component.scss']\r\n})\r\nexport class CalloutComponent {\r\n\r\n  @Input() xPosition: string;\r\n\r\n  @Input() yPosition: string;\r\n\r\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n\r\n  @ViewChild('beak') beak: ElementRef;\r\n\r\n  @Output() closed = new EventEmitter<void | 'click' | 'keydown'>();\r\n\r\n  private _beakPosition;\r\n  get beakPosition() { return this._beakPosition; }\r\n  set beakPosition(val) {\r\n    this._beakPosition = val;\r\n    this.updateBeakPosition();\r\n  }\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n  ) { }\r\n\r\n  updateBeakPosition() {\r\n    if (this.beakPosition) {\r\n      this.beak.nativeElement.style.top = this.beakPosition.top;\r\n      this.beak.nativeElement.style.left = this.beakPosition.left;\r\n      this.beak.nativeElement.style.right = this.beakPosition.right;\r\n      this.beak.nativeElement.style.bottom = this.beakPosition.bottom;\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  ConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  VerticalConnectionPos\r\n} from '@angular/cdk/overlay';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport { Directive, ElementRef, Input, ViewContainerRef } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core/src/metadata/lifecycle_hooks';\r\nimport { Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { CalloutComponent } from './callout.component';\r\n\r\n@Directive({\r\n  selector: '[sxNgxFabricCalloutTrigger]',\r\n  host: {\r\n    'aria-haspopup': 'true',\r\n    '(click)': '_handleClick($event)'\r\n  },\r\n  exportAs: 'sxNgxFabricCalloutTrigger'\r\n})\r\nexport class CalloutTriggerDirective implements OnDestroy {\r\n  @Input()\r\n  get sxNgxFabricCalloutTrigger(): CalloutComponent {\r\n    return this.callout;\r\n  }\r\n\r\n  set sxNgxFabricCalloutTrigger(val: CalloutComponent) {\r\n    this.callout = val;\r\n  }\r\n\r\n  private _portal: TemplatePortal<any>;\r\n  private _overlayRef: OverlayRef | null = null;\r\n  private _calloutOpen = false;\r\n  private _closeSubscription = Subscription.EMPTY;\r\n  private _positionSubscription = Subscription.EMPTY;\r\n\r\n  callout: CalloutComponent;\r\n\r\n  constructor(private _overlay: Overlay, private _element: ElementRef, private _viewContainerRef: ViewContainerRef) {}\r\n\r\n  ngOnDestroy() {\r\n    this._closeSubscription.unsubscribe();\r\n    this._positionSubscription.unsubscribe();\r\n  }\r\n\r\n  openCallout(): void {\r\n    if (!this._calloutOpen) {\r\n      this._createOverlay().attach(this._portal);\r\n      setTimeout(() => {\r\n        this.callout.updateBeakPosition();\r\n      });\r\n    }\r\n  }\r\n\r\n  closeMenu(): void {\r\n    this.callout.closed.emit();\r\n  }\r\n\r\n  _handleClick() {\r\n    this.openCallout();\r\n  }\r\n\r\n  private _createOverlay(): OverlayRef {\r\n    if (!this._overlayRef) {\r\n      this._portal = new TemplatePortal(this.callout.templateRef, this._viewContainerRef);\r\n      const config = this._getOverlayConfig();\r\n      this._overlayRef = this._overlay.create(config);\r\n      this._closeSubscription = this._overlayRef.backdropClick().subscribe(_ => {\r\n        this._overlayRef.detach();\r\n      });\r\n    }\r\n\r\n    return this._overlayRef;\r\n  }\r\n\r\n  private _getOverlayConfig(): OverlayConfig {\r\n    const position = this._getPosition();\r\n    this._subscribeToPositions(position);\r\n    return new OverlayConfig({\r\n      hasBackdrop: true,\r\n      positionStrategy: position,\r\n      scrollStrategy: this._overlay.scrollStrategies.reposition()\r\n    });\r\n  }\r\n\r\n  private _getPosition(): ConnectedPositionStrategy {\r\n    const [originX, originFallbackX]: HorizontalConnectionPos[] = this.callout.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n    const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\r\n      this.callout.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\r\n    const [overlayX, overlayFallbackX] = [originX, originFallbackX];\r\n    const offsetY = 0;\r\n\r\n    originY = overlayY === 'top' ? 'bottom' : 'top';\r\n    originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\r\n\r\n    return this._overlay\r\n      .position()\r\n      .connectedTo(this._element, { originX, originY }, { overlayX, overlayY })\r\n      .withOffsetY(offsetY)\r\n      .withFallbackPosition({ originX: originFallbackX, originY }, { overlayX: overlayFallbackX, overlayY })\r\n      .withFallbackPosition({ originX, originY: originFallbackY }, { overlayX, overlayY: overlayFallbackY }, undefined, -offsetY)\r\n      .withFallbackPosition(\r\n        { originX: originFallbackX, originY: originFallbackY },\r\n        { overlayX: overlayFallbackX, overlayY: overlayFallbackY },\r\n        undefined,\r\n        -offsetY\r\n      );\r\n  }\r\n\r\n  private _subscribeToPositions(position: ConnectedPositionStrategy) {\r\n    this._positionSubscription = position.onPositionChange.pipe(distinctUntilChanged(null, x => x.connectionPair)).subscribe(pos => {\r\n      const isCalloutUnderTrigger = pos.connectionPair.overlayY === 'top';\r\n      const isCalloutLeftAlignedToTrigger = pos.connectionPair.overlayX === 'start';\r\n      const triggerMiddle = this._portal.viewContainerRef.element.nativeElement.offsetWidth / 2 - 14;\r\n\r\n      this.callout.beakPosition = {\r\n        top: isCalloutUnderTrigger ? '-6px' : null,\r\n        bottom: !isCalloutUnderTrigger ? '-6px' : null,\r\n        left: isCalloutLeftAlignedToTrigger ? triggerMiddle + 'px' : null,\r\n        right: !isCalloutLeftAlignedToTrigger ? triggerMiddle + 'px' : null\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CalloutComponent } from './callout.component';\r\nimport { CalloutTriggerDirective } from './callout-trigger.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    CalloutComponent,\r\n    CalloutTriggerDirective\r\n  ],\r\n  exports: [\r\n    CalloutComponent,\r\n    CalloutTriggerDirective\r\n  ]\r\n})\r\nexport class CalloutModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sx-ngx-fabric-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavComponent } from './nav.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NavComponent\r\n  ],\r\n  exports: [\r\n    NavComponent\r\n  ]\r\n})\r\nexport class NavModule { }\r\n","import { NgModule } from '@angular/core';\nimport { SxNgxFabricComponent } from './sx-ngx-fabric.component';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { CommonModule } from '@angular/common';\nimport { CheckboxModule } from './checkbox/checkbox.module';\nimport { ButtonModule } from './button/button.module';\nimport { TextFieldModule } from './text-field/text-field.module';\nimport { DialogModule } from './dialog/dialog.module';\nimport { ToggleModule } from './toggle/toggle.module';\nimport { CalloutModule } from './callout/callout.module';\nimport { NavModule } from './nav/nav.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckboxModule,\n    ButtonModule,\n    TextFieldModule,\n    DialogModule.forRoot(),\n    ToggleModule,\n    BreadcrumbModule,\n    CalloutModule,\n    NavModule\n  ],\n  declarations: [SxNgxFabricComponent],\n  exports: [\n    SxNgxFabricComponent,\n    CheckboxModule,\n    ButtonModule,\n    TextFieldModule,\n    DialogModule,\n    ToggleModule,\n    BreadcrumbModule,\n    CalloutModule,\n    NavModule\n  ]\n})\nexport class SxNgxFabricModule {}\n"]}